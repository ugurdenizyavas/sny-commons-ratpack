import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

//======================================================================
// PROJECT
//======================================================================

version = '1.1-SNAPSHOT'
group = 'com.sony.ebs.octopus3'

//======================================================================
// REPOSITORIES
//======================================================================

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://mvn.sony-europe.com/content/groups/global' }
        maven { url 'http://repo.spring.io/libs-release-remote' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://oss.jfrog.org/repo' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.0.2'
        classpath "io.ratpack:ratpack-gradle:$ratpackVersion"
    }
}

repositories {
    mavenLocal()
    maven { url 'https://mvn.sony-europe.com/content/groups/global' }
    maven { url 'http://oss.jfrog.org/repo' }
    maven { url 'http://repo.springsource.org/repo' }
    maven { url 'http://repo.spring.io/libs-release' }
    mavenCentral()
}

//======================================================================
// PLUGINS
//======================================================================

apply plugin: 'io.ratpack.ratpack-groovy'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'nexus'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'

//======================================================================
// CONFIGURATIONS
//======================================================================

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

configurations {
    all {
        exclude module: 'groovy'
    }
}

shadowJar {
    transform(AppendingTransformer) {
        resource = 'META-INF/spring.handlers'
    }
    transform(AppendingTransformer) {
        resource = 'META-INF/spring.schemas'
    }
}

idea {
    project {
        jdkName '1.7'
        languageLevel '1.7'
    }
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir

    }
}

configurations.compile.transitive = true
configurations.provided.transitive = false
configurations.optional.transitive = false

//======================================================================
// DEPENDENCIES
//======================================================================

dependencies {
    compile 'commons-lang:commons-lang:2.4'

    compile 'com.sony.ebs.octopus3:octopus3-commons:1.2-SNAPSHOT'

    // spring
    provided "org.springframework:spring-core:$springVersion"
    provided "org.springframework:spring-context:$springVersion"
    provided "org.springframework:spring-beans:$springVersion"

    // ratpack
    compile ratpack.dependency("jackson")
    compile ratpack.dependency("rx")
    //springloaded 'org.springsource.springloaded:springloaded-core:1.1.4'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0', {
        exclude module: 'groovy-all'
    }

    // logging
    compile 'org.slf4j:slf4j-api:1.7.5'
    provided 'org.slf4j:slf4j-log4j12:1.7.5'

    // http clients
    compile 'com.ning:async-http-client:1.8.11', {
        exclude group: 'org.slf4j'
        exclude group: 'org.apache.httpcomponents'
    }

    compile 'org.apache.httpcomponents:httpasyncclient:4.0.1'
    compile 'org.apache.httpcomponents:httpmime:4.3.4'
    compile 'org.apache.httpcomponents:httpcore:4.3.2'
    compile 'org.apache.httpcomponents:httpclient:4.3.4'

    testCompile 'com.github.dreamhead:moco-core:0.9.1', {
        exclude group: 'org.slf4j'
        exclude group: 'org.apache.httpcomponents'
    }
}

//======================================================================
// TASKS
//======================================================================

task wrapper(type: Wrapper) {
    gradleVersion = 2.0
}

//======================================================================
// DEPLOY ARTIFACTS
//======================================================================

nexus {
    attachSources = true
    attachTests = false
    attachJavadoc = false
    sign = false
    repositoryUrl = 'https://mvn.sony-europe.com/content/repositories/releases'
    snapshotRepositoryUrl = 'https://mvn.sony-europe.com/content/repositories/snapshots'
}
